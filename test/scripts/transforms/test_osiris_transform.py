"""Test Case for osiris transforms"""

# pylint: disable = line-too-long
from unittest.mock import Mock

from fia_api.scripts.pre_script import PreScript
from fia_api.scripts.transforms.osiris_transform import OsirisTransform

SCRIPT = """# import mantid algorithms, numpy and matplotlib
from mantid.simpleapi import *
import numpy as np


def generate_input_path_for_run(run_number, cycle):
    return f"/archive/ndxosiris/Instrument/data/{cycle}/OSI{run_number}.nxs"

# To change by automatic script
input_runs = [108538, 108539]
# This needs to be loaded from a shared repository of files
calibration_run_numbers = [149784, 149785, 149786]
cycle = "cycle_14_1"
analyser = "graphite"
reflection = "002"
spectroscopy_reduction = True
diffraction_reduction = False

if not diffraction_reduction and not spectroscopy_reduction:
    raise RuntimeError("diffraction_reduction and spectroscopy_reduction are both false, so this will do nothing.")

# Defaults
instrument = "OSIRIS"
workspace_start_of_file = ""
instrument_definition_directory = ConfigService.Instance().getString("instrumentDefinition.directory")
instrument_filename = instrument_definition_directory + instrument + "_Definition.xml"
instrument_workspace = LoadEmptyInstrument(Filename=instrument_filename, OutputWorkspace="instrument_workspace")
efixed = instrument_workspace.getInstrument().getComponentByName(analyser).getNumberParameter("Efixed")[0]
spec_spectra_range = "963,1004"
diff_spectra_range = '3,962'
# Grouping string is for 14 groups, and generated by the UI for indirect data reduction and based on spectra_range
unit_x = "DeltaE"
fold_multiple_frames = False"""


def create_expected_script(
    input_runs,
    calibration_run_numbers,
    cycle,
    analyser,
    reflection,
    spectroscopy_reduction,
    diffraction_reduction,
) -> str:
    """Generate an expected script for assertion"""
    return f"""# import mantid algorithms, numpy and matplotlib
from mantid.simpleapi import *
import numpy as np


def generate_input_path_for_run(run_number, cycle):
    return f"/archive/ndxosiris/Instrument/data/{{cycle}}/OSI{{run_number}}.nxs"

# To change by automatic script
input_runs = {input_runs}
# This needs to be loaded from a shared repository of files
calibration_run_numbers = [{calibration_run_numbers}]
cycle = "{cycle}"
analyser = "{analyser}"
reflection = "{reflection}"
spectroscopy_reduction = {spectroscopy_reduction}
diffraction_reduction = {diffraction_reduction}

if not diffraction_reduction and not spectroscopy_reduction:
    raise RuntimeError("diffraction_reduction and spectroscopy_reduction are both false, so this will do nothing.")

# Defaults
instrument = "OSIRIS"
workspace_start_of_file = ""
instrument_definition_directory = ConfigService.Instance().getString("instrumentDefinition.directory")
instrument_filename = instrument_definition_directory + instrument + "_Definition.xml"
instrument_workspace = LoadEmptyInstrument(Filename=instrument_filename, OutputWorkspace="instrument_workspace")
efixed = instrument_workspace.getInstrument().getComponentByName(analyser).getNumberParameter("Efixed")[0]
spec_spectra_range = "963,1004"
diff_spectra_range = '3,962'
# Grouping string is for 14 groups, and generated by the UI for indirect data reduction and based on spectra_range
unit_x = "DeltaE"
fold_multiple_frames = False"""


def test_osiris_transform_spectroscopy():
    """Test spectroscopy transform"""
    job = Mock()
    job.inputs = {
        "input_runs": [1, 2, 3],
        "calibration_run_numbers": "149784, 149785, 149786",
        "cycle_string": "cycle_1_2",
        "analyser": "silicon",
        "reflection": "011",
        "spectroscopy_reduction": "true",
        "diffraction_reduction": "false",
    }
    script = PreScript(value=SCRIPT)
    OsirisTransform().apply(script, job)

    assert script.value == create_expected_script(
        input_runs="[1, 2, 3]",
        calibration_run_numbers="149784, 149785, 149786",
        cycle="cycle_1_2",
        analyser="silicon",
        reflection="011",
        spectroscopy_reduction=True,
        diffraction_reduction=False,
    )
